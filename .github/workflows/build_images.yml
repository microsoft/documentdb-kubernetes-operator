name: RELEASE - Build Candidate Images

on:
  workflow_dispatch:
    inputs:
      manifest_tag:
        description: 'Tag for the Docker manifest'
        required: false

  push:
    branches:
      - 'main'
    paths-ignore:
      - '*.md'

permissions:
  packages: write
  contents: read
  id-token: write

env:
  DEFAULT_MANIFEST_TAG: 'test'
  IMAGE_TAG: ${{ github.run_id }}-$(date +'%Y-%m-%d')

jobs:
  build-and-push:
    name: Build and Push Images
    strategy:
      matrix:
        arch: [amd64, arm64]
        image:
          - name: operator
            dockerfile: Dockerfile
            context: .
          - name: sidecar
            dockerfile: plugins/sidecar-injector/Dockerfile
            context: plugins/sidecar-injector/
          - name: documentdb
            dockerfile: .github/dockerfiles/Dockerfile_docdb
            context: .
          - name: gateway
            dockerfile: .github/dockerfiles/Dockerfile_gateway
            context: .
        include:
          - arch: amd64
            base_arch: AMD64
            runner: ubuntu-22.04
          - arch: arm64
            base_arch: ARM64
            runner: ubuntu-22.04-arm
    runs-on: ${{ matrix.runner }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Login to GHCR
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Build and Push ${{ matrix.arch }} Image
      run: |
        TAG=${{ env.IMAGE_TAG }}-${{ matrix.arch }}
        docker build \
          --build-arg ARCH=${{ matrix.base_arch }} \
          -t ghcr.io/${{ github.repository }}/${{ matrix.image.name }}:$TAG \
          -f ${{ matrix.image.dockerfile }} ${{ matrix.image.context }}
        docker push ghcr.io/${{ github.repository }}/${{ matrix.image.name }}:$TAG

  create-manifest:
    name: Create, Push, Sign & Verify Manifest
    strategy:
      matrix:
        image: [operator, sidecar]
    runs-on: ubuntu-22.04
    needs: build-and-push
    env:
      MANIFEST_TAG: ${{ github.event.inputs.manifest_tag || 'test' }}
    steps:
    - name: Login to GHCR
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Create and Push Manifest
      run: |
        docker manifest create ghcr.io/${{ github.repository }}/${{ matrix.image }}:${{ env.MANIFEST_TAG }} \
          --amend ghcr.io/${{ github.repository }}/${{ matrix.image }}:${{ env.IMAGE_TAG }}-amd64 \
          --amend ghcr.io/${{ github.repository }}/${{ matrix.image }}:${{ env.IMAGE_TAG }}-arm64
        docker manifest push ghcr.io/${{ github.repository }}/${{ matrix.image }}:${{ env.MANIFEST_TAG }}
    - name: Install cosign
      uses: sigstore/cosign-installer@main
    - name: Sign manifest (keyless)
      run: |
        DIGEST=$(docker buildx imagetools inspect ghcr.io/${{ github.repository }}/${{ matrix.image }}:${{ env.MANIFEST_TAG }} \
          | awk '/^Digest:/ { print $2 }')
        echo "Signing manifest-list@${DIGEST}"
        cosign sign ghcr.io/${{ github.repository }}/${{ matrix.image }}@${DIGEST} -y
    - name: Verify manifest signature (keyless)
      run: |
        DIGEST=$(docker buildx imagetools inspect ghcr.io/${{ github.repository }}/${{ matrix.image }}:${{ env.MANIFEST_TAG }} \
          | awk '/^Digest:/ { print $2 }')
        cosign verify \
          --certificate-identity-regexp "https://github.com/${{ github.repository }}/.github/workflows/build_images.yml@refs/heads/${{ github.ref_name }}" \
          --certificate-oidc-issuer "https://token.actions.githubusercontent.com" \
          ghcr.io/${{ github.repository }}/${{ matrix.image }}@${DIGEST}