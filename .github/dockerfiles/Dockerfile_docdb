FROM mcr.microsoft.com/mirror/docker/library/ubuntu:22.04 AS docdb_build
ARG POSTGRES_INSTALL_ARG=
ARG PG_VERSION=16
ARG CITUS_VERSION=12
ARG DocumentDB_VERSION=0.106-0

# declare installed PG version and Citus version
ENV PG_VERSION=${PG_VERSION}
ENV CITUS_VERSION=${CITUS_VERSION}
ENV DocumentDB_VERSION=${DocumentDB_VERSION}

# Install build essentials - Compiler, debugger, make, etc.
RUN apt-get update && export DEBIAN_FRONTEND=noninteractive \
   && apt-get install -qy \
    wget \
    curl \
    sudo \
    gnupg2 \
    lsb-release \
    tzdata \
    build-essential \
    pkg-config \
    cmake \
    git \
    locales \
    gcc \
    gdb \
    libipc-run-perl \
    unzip \
    apt-transport-https \
    bison \
    flex \
    libreadline-dev \
    zlib1g-dev \
    libkrb5-dev \
    software-properties-common \
    libtool \
    libicu-dev \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

# Add pgdg repo
RUN echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" | tee /etc/apt/sources.list.d/pgdg.list && \
    wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - && \
    apt-get update && \
    rm -rf /var/lib/apt/lists/*

# Prepare for running install scripts
ENV CLEANUP_SETUP=1
ENV INSTALL_DEPENDENCIES_ROOT=/tmp/install_setup
RUN mkdir -p /tmp/install_setup

# Get the docuemntdb repository
RUN wget -P /tmp https://github.com/documentdb/documentdb/archive/refs/tags/v${DocumentDB_VERSION}.zip && \
    unzip /tmp/v${DocumentDB_VERSION}.zip -d /tmp/documentdb && \
    rm /tmp/v${DocumentDB_VERSION}.zip

# Install libbson
RUN [ "bin/bash", "-c", "export MAKE_PROGRAM=cmake && CLEANUP_SETUP=0 /tmp/documentdb/documentdb-${DocumentDB_VERSION}/scripts/install_setup_libbson.sh"]
RUN find / -name *bson* -type f -exec cp --parents --preserve=all  {} /tmp  \;
# Install postgres
RUN [ "bin/bash", "-c", "/tmp/documentdb/documentdb-${DocumentDB_VERSION}/scripts/install_setup_postgres.sh -d \"/usr/lib/postgresql/${PG_VERSION}\" $POSTGRES_INSTALL_ARG -v ${PG_VERSION}" ]

# Install RUM from source
RUN [ "bin/bash", "-c", "PGVERSION=$PG_VERSION /tmp/documentdb/documentdb-${DocumentDB_VERSION}/scripts/install_setup_rum_oss.sh" ]

# Install citus
RUN [ "bin/bash", "-c", "PGVERSION=$PG_VERSION /tmp/documentdb/documentdb-${DocumentDB_VERSION}/scripts/install_setup_citus_core_oss.sh ${CITUS_VERSION}" ]

# Install citus-indent
RUN [ "bin/bash", "-c", "/tmp/documentdb/documentdb-${DocumentDB_VERSION}/scripts/install_citus_indent.sh" ]

# Install SYSTEM_ROWS
RUN [ "bin/bash", "-c", "PGVERSION=$PG_VERSION /tmp/documentdb/documentdb-${DocumentDB_VERSION}/scripts/install_setup_system_rows.sh" ]

# Install PG_CRON
RUN [ "bin/bash", "-c", "PGVERSION=$PG_VERSION /tmp/documentdb/documentdb-${DocumentDB_VERSION}/scripts/install_setup_pg_cron.sh" ]

# Download Decimal128 Intel library
RUN [ "bin/bash", "-c", "CLEANUP_SETUP=0 /tmp/documentdb/documentdb-${DocumentDB_VERSION}/scripts/install_setup_intel_decimal_math_lib.sh" ]

# Download PCRE2 library
RUN [ "bin/bash", "-c", "CLEANUP_SETUP=0 /tmp/documentdb/documentdb-${DocumentDB_VERSION}/scripts/install_setup_pcre2.sh" ]

# Install PG_VECTOR
RUN [ "bin/bash", "-c", "PGVERSION=$PG_VERSION /tmp/documentdb/documentdb-${DocumentDB_VERSION}/scripts/install_setup_pgvector.sh" ]

# Install PostGIS from source
RUN add-apt-repository -y ppa:ubuntugis/ppa && apt-get update && \
    apt-get install -qy \
    libproj-dev \
    libxml2-dev \
    libjson-c-dev \
    libgeos-dev \
    libgeos++-dev \
    && rm -rf /var/lib/apt/lists/*
RUN [ "bin/bash", "-c", "PGVERSION=$PG_VERSION /tmp/documentdb/documentdb-${DocumentDB_VERSION}/scripts/install_setup_postgis.sh" ]

# Install DoucmentDB extensions
RUN cd /tmp/documentdb/documentdb-${DocumentDB_VERSION}/ && \
    make PG_CONFIG=/usr/lib/postgresql/${PG_VERSION}/bin/pg_config install


FROM mcr.microsoft.com/mirror/docker/library/ubuntu:22.04 as docdb_final

# Redeclare ARG variables for this stage
ARG PG_VERSION=16
ARG CITUS_VERSION=12
ARG DocumentDB_VERSION=0.106-0

# declare installed PG version and Citus version
ENV PG_VERSION=${PG_VERSION}
ENV CITUS_VERSION=${CITUS_VERSION}
ENV DocumentDB_VERSION=${DocumentDB_VERSION}

# Copy PCRE2
COPY --from=docdb_build /tmp/install_setup/pcre2-10.40 /tmp/pcre2-10.40

RUN apt-get update && export DEBIAN_FRONTEND=noninteractive \
   && apt-get install -qy \
    sudo \
    locales \
    apt-transport-https \
    libreadline8 \
    zlib1g \
    libkrb5-3 \
    libtool \
    libicu70 \
    libssl3  \
    software-properties-common && \
    add-apt-repository -y ppa:ubuntugis/ppa && apt-get update && \
    apt-get install -qy \
    libproj22 \
    libxml2 \
    libjson-c5 \
    libgeos-c1v5 \
    libgeos3.10.2 \
    && cd /tmp/pcre2-10.40 && \
    /bin/bash ./libtool   --mode=install /usr/bin/install -c   libpcre2-8.la libpcre2-posix.la '/usr/lib'  && \
    rm -rf /tmp/pcre2-10.40 && \
    apt-get remove -y apt-transport-https  libtool software-properties-common \
    && apt-get autoremove -y \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8


# Copy Intel Mathlib
COPY --from=docdb_build /tmp/install_setup/IntelRDFPMathLibapplied/2.0u3-1 /usr/
COPY --from=docdb_build /tmp/install_setup/IntelRDFPMathLibapplied/2.0u3-1/intelmathlib.pc /usr/local/lib/aarch64-linux-gnu/pkgconfig/intelmathlib.pc

# Cope bson files
COPY --from=docdb_build  /tmp/usr /usr

# Copy Postgres
COPY --from=docdb_build /usr/lib/postgresql/$PG_VERSION /usr/lib/postgresql/$PG_VERSION
COPY --from=docdb_build /usr/local/bin/* /usr/local/bin/


ENV LANG en_US.UTF-8
ENV LC_ALL en_US.UTF-8
ENV LANGUAGE en_US

# Create documentdb user
RUN useradd -ms /bin/bash postgres -G sudo && \
    echo "%sudo ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/no-pass-ask && \
    # Add postgres to path for sudo commands.
    cat /etc/sudoers | grep secure_path | sed "s/\:\/bin\:/\:\/bin\:\/usr\/lib\/postgresql\/$PG_VERSION\/bin\:/" >> /etc/sudoers.d/postgres_path \
    #&& sudo groupmod -g 103 postgres && sudo usermod -u 105 -g 103 postgres 
    && sudo mkdir /scripts \
    && mkdir /data && chown postgres:postgres /data

COPY --from=docdb_build /tmp/documentdb/documentdb-${DocumentDB_VERSION}/scripts/s* /scripts/
COPY --from=docdb_build /tmp/documentdb/documentdb-${DocumentDB_VERSION}/scripts/utils.sh /scripts/

# Add PG to the path
ENV PATH=$PATH:/usr/lib/postgresql/$PG_VERSION/bin

USER postgres
WORKDIR /home/postgres

# To run DoucmentDB server
# docker run -it <docdb> /bin/bash
# inside docker `/scripts/start_oss_server.sh`


